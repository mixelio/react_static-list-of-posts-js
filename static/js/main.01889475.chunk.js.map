{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","mailToUser","email","className","href","name","CommentInfo","comment","mailToLink","body","CommentList","comments","map","id","PostInfo","post","allOfComments","length","userIdentefity","title","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"q98IAAaA,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnBC,EAAU,iBAAaD,EAAKE,OAElC,OACE,mCACE,mBAAGC,UAAU,WAAWC,KAAMH,EAA9B,SACGD,EAAKK,UCNDC,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtBC,EAAU,iBAAaD,EAAQL,OAErC,OACE,mCACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGI,EAAQF,OAGV,OAED,mBACEF,UAAU,qBACVC,KAAMI,EAFR,SAIGD,EAAQL,WAIb,qBAAKC,UAAU,oBAAf,SACGI,EAAQE,aCpBNC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,mCACE,qBAAKR,UAAU,cAAf,SACGQ,EAASC,KAAI,SAAAL,GAAO,OACnB,cAAC,EAAD,CAEEA,QAASA,GADJA,EAAQM,YCJVC,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnBC,EAAyC,IAAzBD,EAAKJ,SAASM,OAEhC,cAAC,EAAD,CACEN,SAAUI,EAAKJ,WAGjB,qBAAKR,UAAU,cAAc,UAAQ,oBAArC,SACE,qBAAKA,UAAU,oBAAf,qCAMAe,EAA+B,OAAdH,EAAKf,KAExB,cAAC,EAAD,CACEA,KAAMe,EAAKf,OAEX,SAEN,OAAoB,IAAhBe,EAAKE,OACA,KAIP,mCACE,sBAAKd,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGY,EAAKI,QAGR,8BACG,eAEAD,QAIL,mBAAGf,UAAU,iBAAb,SACGY,EAAKN,OAGPO,QC7CII,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,mCACE,qBAAKlB,UAAU,WAAf,SACGkB,EAAMT,KAAI,SAAAG,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,GADDA,EAAKF,Y,qBCYb,IAAMQ,EAAQC,EAAgBV,KAAI,SAAAG,GAAI,kCACxCA,GADwC,IAE3Cf,MAbmBuB,EAaDR,EAAKQ,OAZhBC,EAAgBC,MAAK,SAAAzB,GAAI,OAAIA,EAAKa,KAAOU,MAC3C,MAYLZ,UATyBe,EASGX,EAAKF,GARnB,YAAOc,GAELC,QAAO,SAAArB,GAAO,OAAIA,EAAQmB,SAAWA,QAHvD,IAA2BA,EALNH,KAiBRM,EAAM,kBACjB,0BAAS1B,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CACEkB,MAAOA,QC1BbS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.01889475.chunk.js","sourcesContent":["export const UserInfo = ({ user }) => {\n  const mailToUser = `mailto:${user.email}`;\n\n  return (\n    <>\n      <a className=\"UserInfo\" href={mailToUser}>\n        {user.name}\n      </a>\n    </>\n  );\n};\n","export const CommentInfo = ({ comment }) => {\n  const mailToLink = `mailto:${comment.email}`;\n\n  return (\n    <>\n      <div className=\"CommentInfo\">\n        <div className=\"CommentInfo__title\">\n          <strong className=\"CommentInfo__name\">\n            {comment.name}\n          </strong>\n\n          {' by '}\n\n          <a\n            className=\"CommentInfo__email\"\n            href={mailToLink}\n          >\n            {comment.email}\n          </a>\n        </div>\n\n        <div className=\"CommentInfo__body\">\n          {comment.body}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <>\n    <div className=\"CommentList\">\n      {comments.map(comment => (\n        <CommentInfo\n          key={comment.id}\n          comment={comment}\n        />\n      ))}\n    </div>\n  </>\n);\n","import { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\n\nexport const PostInfo = ({ post }) => {\n  const allOfComments = post.comments.length !== 0\n    ? (\n      <CommentList\n        comments={post.comments}\n      />\n    ) : (\n      <div className=\"CommentList\" data-cy=\"NoCommentsMessage\">\n        <div className=\"CommentInfo__body\">\n          No comments available\n        </div>\n      </div>\n    );\n\n  const userIdentefity = post.user !== null\n    ? (\n      <UserInfo\n        user={post.user}\n      />\n    ) : 'anonim';\n\n  if (post.length === 0) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"PostInfo\">\n        <div className=\"PostInfo__header\">\n          <h3 className=\"PostInfo__title\">\n            {post.title}\n          </h3>\n\n          <p>\n            {' Posted by  '}\n\n            {userIdentefity}\n          </p>\n        </div>\n\n        <p className=\"PostInfo__body\">\n          {post.body}\n        </p>\n\n        {allOfComments}\n\n      </div>\n    </>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <>\n    <div className=\"PostList\">\n      {posts.map(post => (\n        <PostInfo\n          key={post.id}\n          post={post}\n        />\n      ))}\n    </div>\n  </>\n);\n","import './App.scss';\n\nimport { PostList } from './components/PostList';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nfunction getCommentsOfPost(postId) {\n  const comments = [...commentsFromServer];\n\n  return comments.filter(comment => comment.postId === postId);\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsOfPost(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList\n      posts={posts}\n    />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}